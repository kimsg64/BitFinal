<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit5.wherewego.course.CourseDAOImp">
	<select id="courseAllSelect" resultType="com.bit5.wherewego.course.CourseVO">	
		select * from 
		(select * from 
		(select c_num, name, stname, userid, grade from course c
		join station s on c.stcode=s.stcode
		<if test='param4!=null and !param4.equals("")'>
		and ${param3} like '%'||#{param4, jdbcType=VARCHAR}||'%' 
		</if>
		order by c_num desc) 
		<![CDATA[ 
		where rownum<=#{param1} order by c_num asc) 
		where rownum<=#{param2} order by c_num desc
		]]>
	</select>
	
	<select id="totalCourseCount" resultType="int">
		select count(c_num) from course c
		join station s on c.stcode=s.stcode
		<if test='param2!=null and !param2.equals("")'>
		and ${param1} like '%'||#{param2}||'%' 
		</if>	 
	</select>
	
	<select id="newCourseCount" resultType="int">
		select count(c_num) newCourseCount from course where grade='검토중'
	</select>
	
	<select id="myCourseSelect" resultType="com.bit5.wherewego.course.CourseVO">
		select c_num, name, userid, stcode, info, grade, pcode1, pcode2, pcode3, score, coursesort, opt 
		from course where userid=#{param1} order by c_num desc
	</select>

	<!-- 코스등록 전, 중복 여부 확인 -->
	<select id="checkCourse" parameterType="com.bit5.wherewego.course.CourseVO" resultType="int">
		select count(c_num) from course
		where pcode1=${pcode1} and pcode2=${pcode2} and pcode3=${pcode3}
	</select>
	
	<!-- 새로운 코스 등록 -->
	<insert id="insertCourse" parameterType="com.bit5.wherewego.course.CourseVO">
		insert into course(name, userid, stcode, grade, pcode1, pcode2, pcode3, coursesort
		<if test='info!=null and !info.equals("")'>
		,info
		</if>
		<if test='opt!=null and !opt.equals("")'>
		,opt
		</if>
		) values(#{name}, #{userid}, (select stcode from station where stname=#{stname}), #{grade},
		${pcode1},${pcode2},${pcode3},${coursesort}
		<if test='info!=null and !info.equals("")'>
		,#{info}
		</if>
		<if test='opt!=null and !opt.equals("")'>
		,#{opt}
		</if>
		)
	</insert>
	
	<!-- 코스검색 누르면 추천코스 떠야함 -->
	<select id="coursePlanD" resultType="com.bit5.wherewego.res.ResultVO">
		select sc.score, c.c_num, c.name, c.stcode, s.stname, c.info, c.pcode1, c.pcode2, c.pcode3, 
		p1.name name1, p2.name name2, p3.name name3, p1.addr addr1, p2.addr addr2, p3.addr addr3,
		p1.tel tel1, p2.tel tel2, p3.tel tel3, p1.info info1, p2.info info2, p3.info info3, 
		p1.link link1, p2.link link2, p3.link link3
		
		from (select * from course
		where stcode=${param1} and coursesort=${param2} and grade='승인'
		<if test='param3!=null and !param3.equals("")'>
		and opt like '%'||#{param3, jdbcType=VARCHAR}||'%' 
		</if>
		<if test='param4!=null and !param4.equals("")'>
		and opt like '%'||#{param4, jdbcType=VARCHAR}||'%' 
		</if>
		<if test='param5!=null and param5.size!=0'>
		and
			<foreach item="item" collection="param5" open="(" separator=" or " close=")" >
				opt like '%'||#{item}||'%' 
			</foreach>
		</if>	
		<if test='param6!=null and param6.size!=0'>
		and
			<foreach item="item" collection="param6" open="(" separator=" or " close=")" >
				opt like '%'||#{item}||'%' 
			</foreach>
		</if>
		<if test='param7!=null and param7.size!=0'>
		and
			<foreach item="item" collection="param7" open="(" separator=" or " close=")" >
				opt like '%'||#{item}||'%' 
			</foreach>
		</if>
		<if test='param8!=null and param8.size!=0'>
		and 
			<foreach item="item" collection="param8" open="(" separator=" or " close=")" >
				opt like '%'||#{item}||'%' 
			</foreach>
		</if>
	) c
	join place p1 on c.pcode1=p1.pcode
	join place p2 on c.pcode2=p2.pcode
	join place p3 on c.pcode3=p3.pcode
	join station s on c.stcode=s.stcode
	left join (select avg(score) score,c_num from (select r.score,n.c_num, n.name
	from review r
	join (select e.res_num,e.c_num,c.name from res e
	join course c on e.c_num=c.c_num) n
	on r.res_num=n.res_num) group by c_num) sc on c.c_num=sc.c_num	
	</select>
	
	
	<!-- 코스 뷰 -->
		<select id="courseDetail" parameterType="int" resultType="com.bit5.wherewego.res.ResultVO">
		select sc.score, c.c_num, c.name, c.userid, c.stcode, s.stname, c.info, c.grade,
		c.pcode1, c.pcode2, c.pcode3,c.coursesort, c.opt,
		p1.name name1, p2.name name2, p3.name name3, p1.addr addr1, p2.addr addr2,
		p3.addr addr3,
		p1.tel tel1, p2.tel tel2, p3.tel tel3, p1.info info1, p2.info info2, p3.info
		info3,
		p1.link link1, p2.link link2, p3.link link3
		from (select * from course where c_num=${param1}) c
		join place p1 on c.pcode1=p1.pcode
		join place p2 on
		c.pcode2=p2.pcode
		join place p3 on c.pcode3=p3.pcode
		join station s on
		c.stcode=s.stcode
		left join (select avg(score) score,c_num from (select
		r.score,n.c_num, n.name
		from review r
		join (select
		e.res_num,e.c_num,c.name from res e
		join course c on e.c_num=c.c_num) n
		on r.res_num=n.res_num) group by c_num) sc on c.c_num=sc.c_num
	</select>
	
	<!-- 공개 비공개 -->
	<update id="coursegrade" >
		update course set 
		<choose>
			<when test='param2.equals("승인")'>grade='승인'</when>
			<otherwise>grade='미승인'</otherwise>
		</choose>
		where c_num=${param1} 
	</update>
	
	<!-- 장소 비공개로 바뀌면 코스 미승인으로 돌려놓음 -->
	<update id="gradecourse">
		update course set grade='미승인' where pcode1=#{param1} or pcode2=#{param1} or pcode3=#{param1}  
	</update>
</mapper>